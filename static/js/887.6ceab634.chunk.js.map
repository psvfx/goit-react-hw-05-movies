{"version":3,"file":"static/js/887.6ceab634.chunk.js","mappings":"8OAEaA,EAAW,SAAC,GAGlB,IAAD,IAFJC,KAAQC,EAEJ,EAFIA,aAAcC,EAElB,EAFkBA,KAAMC,EAExB,EAFwBA,UAC5BC,EACI,EADJA,MAEA,OACE,yBACE,4BACE,gBAAKC,KAAKC,EAAAA,EAAAA,GAAUL,GAAeM,IAAI,eAAeC,MAAO,WAC7D,wBAAKN,KACL,yBAAG,aAAWC,SAJTC,EAQZ,E,oCCTYK,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAeL,GAF1C,OAEUM,EAFV,OAGIP,EAAQO,EAASlB,MAHrB,gDAKImB,QAAQL,MAAR,MACAC,GAAS,GANb,0DADc,uBAAC,WAAD,wBAUdK,EACD,GAAE,CAACR,KAGF,gCACGE,IAAS,SAAC,EAAAO,aAAD,IACTrB,IACC,0BACE,wBACGA,EAAKsB,KAAI,SAACC,EAAUnB,GACnB,OAAO,SAACL,EAAD,CAAUC,KAAMuB,EAAUnB,MAAOA,GACzC,UAMZ,C,qFCtCYiB,EAAe,WAC1B,OACE,0BACE,wBAAI,qDAGT,C,+LCCM,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,sBADd,cACCC,EADD,yBAGEA,EAAKC,MAHP,kEALPF,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBG,QAAS,oCASJ,IAAMC,EAAe,mCAAG,WAAMjB,GAAN,uFACVa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,qBADU,cACvBc,EADuB,yBAGtBA,EAAKC,MAHiB,2CAAH,sDAMrB,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACcN,EAAAA,EAAAA,IAAA,6BAAgCM,IAD9C,cACCL,EADD,yBAGEA,EAAKC,MAHP,kEAMA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAA8BL,GAA9B,uFACca,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,aADd,cACCc,EADD,yBAGEA,EAAKC,MAHP,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCpB,GAAhC,uFACca,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,aADd,cACCc,EADD,yBAGEA,EAAKC,MAHP,kE,oBCzBP,IAJkB,SAAAM,GAChB,OAAOA,EAAG,yCAAqCA,GAH9B,oEAIlB,C","sources":["components/CastItem/CastItem.jsx","components/Cast/Cast.jsx","components/ErrorMessages/ErrorMessages.jsx","services/api.jsx","services/getDefaultImg.jsx"],"sourcesContent":["import getPoster from 'services/getDefaultImg';\n\nexport const CastItem = ({\n  cast: { profile_path, name, character },\n  index,\n}) => {\n  return (\n    <li key={index}>\n      <div>\n        <img src={getPoster(profile_path)} alt=\"Foto_Profile\" width={'300px'} />\n        <h3>{name}</h3>\n        <p>Character:{character}</p>\n      </div>\n    </li>\n  );\n};\n","import { CastItem } from 'components/CastItem/CastItem';\nimport { ErrorMessage } from 'components/ErrorMessages/ErrorMessages';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastMovie } from 'services/api';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { moviesId } = useParams();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCastInf() {\n      try {\n        const respCast = await fetchCastMovie(moviesId);\n        setCast(respCast.cast);\n      } catch (error) {\n        console.error(error);\n        setError(true);\n      }\n    }\n    fetchCastInf();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <ErrorMessage />}\n      {cast && (\n        <div>\n          <ul>\n            {cast.map((actorInf, index) => {\n              return <CastItem cast={actorInf} index={index} />;\n            })}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n","export const ErrorMessage = () => {\n  return (\n    <div>\n      <h3>Oops....Not found page! Please reload the page!</h3>\n    </div>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'b0e90257c8451bf4533c703dab2143f0',\n};\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get(`trending/movie/day`);\n\n  return resp.data;\n}\n\nexport const fetchMoviesById = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}?&language=en-US`);\n\n  return resp.data;\n};\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const resp = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return resp.data;\n}\n\nexport async function fetchCastMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/credits`);\n\n  return resp.data;\n}\n\nexport async function fetchReviwsMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/reviews`);\n\n  return resp.data;\n}\n","const defaultImgURL = `http://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg`;\n\nconst getPoster = url => {\n  return url ? `https://image.tmdb.org/t/p/w300${url}` : defaultImgURL;\n};\n\nexport default getPoster;\n"],"names":["CastItem","cast","profile_path","name","character","index","src","getPoster","alt","width","Cast","useState","setCast","moviesId","useParams","error","setError","useEffect","fetchCastMovie","respCast","console","fetchCastInf","ErrorMessage","map","actorInf","fetchTrendingMovies","axios","resp","data","api_key","fetchMoviesById","fetchMoviesBySearch","searchQuery","fetchReviwsMovie","url"],"sourceRoot":""}